CREATE DATABASE db_kungfood;

USE db_kungfood;

CREATE TABLE db_kungfood.tb_funcionario(
	id_funcionario INT AUTO_INCREMENT PRIMARY KEY NOT NULL COMMENT 'CODIGO DO FUNCIONARIO',
	ds_login_funcionario VARCHAR(30) NOT NULL COMMENT 'LOGIN DO FUNCIONARIO PARA ACESSO AO SISTEMA kungFood',
	ds_senha_funcionario VARCHAR(30) NOT NULL COMMENT 'SENHA DO FUNCIONARIO PARA ACESSO AO SISTEMA kungFood'   	
);

CREATE TABLE db_kungfood.tb_cliente(
	id_cliente INT AUTO_INCREMENT PRIMARY KEY NOT NULL COMMENT 'CODIGO DO CLIENTE',
	nm_cliente VARCHAR(70) NOT NULL COMMENT 'NOME DO CLIENTE',
	fl_sexo_cliente	CHAR(1)	NOT NULL COMMENT 'INFORMAR M OU F',
	dt_cadastro_cliente DATETIME NOT NULL COMMENT 'DATA DE CADASTRO DO REGISTRO',
	ds_email_cliente VARCHAR(80) NOT NULL COMMENT 'EMAIL DO CLIENTE',
	ds_endereco_cliente VARCHAR(200) NOT NULL COMMENT 'DESCRICAO DO ENDERECO DO CLIENTE'
);

CREATE TABLE db_kungfood.tb_cardapio(
	id_prato INT AUTO_INCREMENT PRIMARY KEY NOT NULL COMMENT 'CODIGO DO PRATO',
	nm_prato VARCHAR(70) NOT NULL COMMENT 'NOME DO PRATO',
	ds_prato VARCHAR(200) NOT NULL COMMENT 'DESCRICAO DO PRATO',
	vl_prato DOUBLE NOT NULL COMMENT 'VALOR DO PRATO'
);

CREATE TABLE db_kungfood.tb_combo(
	id_combo INT AUTO_INCREMENT PRIMARY KEY NOT NULL COMMENT 'CODIGO DO COMBO',
	nm_combo VARCHAR(50) NOT NULL COMMENT 'NOME DO COMBO',
	ds_combo VARCHAR(200) NOT NULL COMMENT 'DESCRICAO DO COMBO',
	vl_combo DOUBLE NOT NULL COMMENT 'VALOR DO COMBO'
    
);

CREATE TABLE db_kungfood.tb_pedido(
	id_pedido INT AUTO_INCREMENT PRIMARY KEY NOT NULL COMMENT 'CODIGO DO PEDIDO',
	id_cliente INT NOT NULL COMMENT 'CODIGO DO CLIENTE',
	sts_pedido VARCHAR(50) NOT NULL COMMENT 'ESTADO DO PEDIDO',
	id_prato INT NOT NULL COMMENT 'CODIGO DO PRATO',
	qtd_pedido INT NOT NULL COMMENT 'QUANTIDADE DE PEDIDOS'
);

CREATE TABLE db_kungfood.tb_prod_estoque(
	id_prod_estoque INT AUTO_INCREMENT PRIMARY KEY NOT NULL COMMENT 'CODIGO DO PRODUTO NO ESTOQUE',
	nm_prod_estoque VARCHAR(100) NOT NULL COMMENT 'NOME DO PRODUTO NO ESTOQUE',
	ds_prod_estoque VARCHAR(255) NOT NULL COMMENT 'DESCRICAO DO PRODUTO NO ESTOQUE',
	vl_prod_estoque DOUBLE NOT NULL COMMENT 'VALOR DO PRODUTO NO ESTOQUE',
	qt_prod_estoque DOUBLE NOT NULL COMMENT 'QUANTIDADE DO PRODUTO NO ESTOQUE',
	validade_prod_estoque DATE NULL COMMENT 'VALIDADE DO PRODUTO NO ESTOQUE'
);


ALTER TABLE db_kungfood.tb_pedido ADD FOREIGN KEY (id_cliente) REFERENCES db_kungfood.tb_cliente(id_cliente);

ALTER TABLE db_kungfood.tb_pedido ADD FOREIGN KEY (id_prato) REFERENCES db_kungfood.tb_cardapio(id_prato);

INSERT INTO db_kungfood.tb_funcionario (ds_login_funcionario,ds_senha_funcionario) VALUES('admin','admin');

SHOW FULL COLUMNS FROM tb_funcionario;

SELECT * FROM db_kungfood.tb_funcionario;
